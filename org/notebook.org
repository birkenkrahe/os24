#+TITLE: Notebook - Operating Systems
#+AUTHOR: Marcus Birkenkrahe
#+SUBTITLE: CSC 420, Lyon College, Spring 2024
#+STARTUP:overview hideblocks indent inlineimages
#+OPTIONS: toc:nil num:nil ^:nil
* Week 1 - Overview and introduction to OS
#+attr_html: :width 400px
[[../img/cover.png]]

- [X] Course overview - [[https://lyon.instructure.com/courses/2255/assignments/syllabus][syllabus]] and [[https://lyon.instructure.com/courses/2255/pages/course-links][course links]]
- [X] Textbook: The Linux Command Line (2e) - [[https://linuxcommand.org/tlcl.php][free PDF]]
- [X] Installation MSYS2 and CYGWIN on Windows ([[https://chat.google.com/room/AAAABlWSGes/8AnZfK60IZM/8AnZfK60IZM?cls=10][Google Chat]])

** Computer Chronicles - Operating Systems (1984)

- [[https://youtu.be/V5S8kFvXpo4?si=fPAMxylnvxkqHlfC][Source: YouTube]].
- My notes made while watching in class.
- [[https://chat.google.com/room/AAAABlWSGes/VzKc4SfKHUc/VzKc4SfKHUc?cls=10][Post in the OS Google Chat]].


* Week 2 - OS Structures

- [ ] Discuss "A practical view of the Linux system"
- [ ] Get started with Raspberry Pi: connect and update
- [ ] Complete Emacs tutorial (upload to Canvas)

** TODO Announcement: Journal club!

Data science enthusiasts: there will be a "journal club" on Wednesday
12-12:45 pm in Derby room 209. We'll put the papers in a GDrive.

For the first journal club on Januar 31, I'd like to submit my last
non-technical paper, "The role of AI coding assistants: revisiting the
need for literate programming in computer and data science education."
([[https://drive.google.com/file/d/1OonJ1pesK2iRP3JDf4MoBRgg4NKk91yU/view?usp=sharing][Link]]) This paper will be presented at INTED'24, the 18th annual
International Technology, Education and Development Conference in
Valencia (Spain), March 4-6.

You can get some background on this topic from the wall poster in
front of my office, about the paper that I wrote before this one.
#+ATTR_HTML: :WIDTH 400px:
[[../img/MDPI_2023_BIRKENKRAHE_poster.pptx.png]]

*Caveat:* in a journal club, you discuss other people's papers and not
your own - I will try to simulate that by discussing my paper as if
someone else had written it, and also using AI to deliver a critique.

** IN PROGRESS Reading assignment: A Practical View of the Linux System (2019)

- Read "A practical view of the Linux system" (ARM, 2019)
- [[https://www.arm.com/resources/education/books/operating-systems][Free textbook from ARM]] (British producer of the RPi's CPU).
- High level overview and nitty-gritty (C code).
- Read this as a preparation for lecture & discussion.
- Write down any questions you may have.

** TODO Project challenge - (virtually) impossible

- 420 level course = independence and inspiration!
- This is a great opportunity for AI to shine!
- We'll only have 3 sprints, after 6, 11 and 15 weeks:
  1. Proposal in week 6.
  2. Results in week 11.
  3. Final presentation in week 16.

#+begin_quote
Prompt: "Give me 15 project ideas for a course on Operating Systems,
especially Linux. A project is completed by an individual student. The
project runs for 15 weeks. The student must produce a proposal
including methodology and references."
#+end_quote

[[https://chat.openai.com/share/c278de95-6b4a-4588-acb3-146689054b4d][Here's the answer.]] Including a sample breakdown of one project, and
the prerequisites:

1) Student with knowledge and experience
   - Computer Architecture 
   - C programming (especially pointers, memory management)
   - Command line, bash programming, GCC, GNU make
2) Beginner
   - Set up a Linux environment (virtual machine) for experimentation
   - Write a simple kernel module
   - Compile the module
   - Learn to load and unload the kernel module
   - View kernel log for module output.

How such a kernel module could look like:
#+begin_example C
#include <linux/module.h>   // Needed for all modules
#include <linux/kernel.h>   // Needed for KERN_INFO

// Module Initialization function
static int __init simple_module_init(void) {
    printk(KERN_INFO "SimpleModule: Module loaded!\n");
    return 0; // Return 0 means module successfully loaded
}

// Module Cleanup function
static void __exit simple_module_exit(void) {
    printk(KERN_INFO "SimpleModule: Module unloaded!\n");
}

// Register module entry and exit points
module_init(simple_module_init);
module_exit(simple_module_exit);

// Module information
MODULE_LICENSE("GPL");
MODULE_AUTHOR("Your Name");
MODULE_DESCRIPTION("A Simple Linux Kernel Module");
MODULE_VERSION("0.1");
#+end_example

Simpler: bash- and shell-related projects.
** TODO Project challenge - (totally) possible

Re-create a Raspberry Pi projects. The choice is yours!
- [[https://www.tomshardware.com/features/best-raspberry-pi-projects][Best Raspberry Pi projects January 2024]]
- [[https://pimylifeup.com/category/projects/][List of 160+ projects]]
- [[https://www.hackster.io/raspberry-pi/projects][4343 Raspberry Pi Projects]]

To do this, and to do stuff at home, you can take your Pi home if you
like and if you promise to look after it. If you destroy it, you'll
have to replace it - the Pi400 only costs $84 right now [[https://www.amazon.com/Raspberry-400-Computer-Kit-RPI400-US/dp/B08MYVQW1S/ref=sr_1_2?crid=7VCXPFUD7I0R&keywords=pi400&qid=1705606222&s=books&sprefix=pi400%2Cstripbooks%2C122&sr=1-2&ufe=app_do%3Aamzn1.fos.006c50ae-5d4c-4777-9bc0-4513d670b6bc][at
Amazon]]. (You might want to get your own anyway!)

** TODO FYI - Installing Raspberry Pi OS for Pi400

Sources:
- [[https://www.raspberrypi.com/documentation/computers/getting-started.html][Getting started: detailed instructions]]
- [[https://www.raspberrypi.com/software/operating-systems/][Download area (RPi Imager - installer)]]
- [[https://www.raspberrypi.com/software/raspberry-pi-desktop/#:~:text=Debian%20with%20Raspberry%20Pi%20Desktop,PC%20or%20Apple%20Mac%20computer.][Raspberry Pi Desktop (for any old computer)]]
- [[https://youtu.be/eZ74x6dVYes?si=vLjK8nndJS2uS6bf][Raspberry Pi Explained in 100 seconds]]

What to do:
1. Get an SD card reader ([[https://www.amazon.com/UGREEN-Reader-Memory-Windows-Simultaneously/dp/B01EFPX9XA/ref=asc_df_B01EFPX9XA/?tag=hyprod-20&linkCode=df0&hvadid=309777534894&hvpos=&hvnetw=g&hvrand=14922228828382288851&hvpone=&hvptwo=&hvqmt=&hvdev=c&hvdvcmdl=&hvlocint=&hvlocphy=9025961&hvtargid=pla-438771094500&psc=1&mcid=3346d44aed8837e692060fcb6e3c7209&tag=&ref=&adgrpid=58425267301&hvpone=&hvptwo=&hvadid=309777534894&hvpos=&hvnetw=g&hvrand=14922228828382288851&hvqmt=&hvdev=c&hvdvcmdl=&hvlocint=&hvlocphy=9025961&hvtargid=pla-438771094500&gclid=CjwKCAiAkp6tBhB5EiwANTCx1MXXejCwHTaI0GldFt8JUvq7DYoQPfNZgsoibyMvW6i26B62w9UBUhoC2twQAvD_BwE][I use this one]] - $12).
2. Get an SDHC card ([[https://www.amazon.com/Samsung-Class-Adapter-MB-MC32GA-AM/dp/B0749KG1JK/ref=sr_1_2?crid=MY5LUD60LHJI&keywords=samsung+32gb+sd+card+micro&qid=1705552023&sprefix=samsung+32gb+s%2Caps%2C112&sr=8-2][I use SanDisk Ultra Class 10 32GB]] - $12).
3. Mount SD card reader with microSD to your PC (Windows/MacOS = plugin).
4. Run RPi installer program on your PC.
5. Follow the instructions (pick Pi model/OS type/storage device).
6. Insert SD card in Rasperry Pi - boot and configure.



* Week 3 - OS Processes
* Week 4 - What is the Shell?
* Week 5 - Navigation
* Week 6 - Exploring the system / Sprint review: proposal
* Week 7 - Manipulating files and directories
* Week 8 - Working with commands
* Week 9 - Redirection
* Week 10 - Permissions
* Week 11 - Processes / Package management / Sprint review: results
* Week 12 - Storage media / Networking
* Week 13 - Searching for files / Archiving and backup
* Week 14 - Regular expressions / Text processing
* Week 15 - Linux vs. Windows
* Week 16 - Summary and outlook / Final sprint review: presentation
* References

ARM (2010). Operating Systems Foundations with Linux on the Raspberry
Pi. By Professor Wim Vanderbauwhede and Dr. Jeremy Singer ISBN
978-1-911531-20-3. [[https://www.arm.com/resources/education/books/operating-systems][URL: arm.com]].
