#+STARTUP: hideblocks overview indent :
#+OPTIONS: toc:nil num:nil ^:nil : 
* Exercise: Manipulate Files and Data in Linux using Emacs Org-mode
  - **Objective**: Utilize Emacs Org-mode to practice file manipulation
    commands in a Linux environment, reinforcing your understanding
    through hands-on experience.
  - **Duration**: 30 minutes
  - **Tools Required**: Access to a Linux terminal, Emacs installed,
    preferably on a Raspberry Pi running Raspbian GNU/Linux 11
    (bullseye) as per the initial setup in the lecture.

* Instructions:
  - You are required to document all your commands and observations in
    an Emacs Org-mode file. This Org-mode file will be submitted upon
    completion of the exercise.
  - Open Emacs and create a new Org-mode file named
    ~Feb_22_Practice.org~ from this file:
    [[http://tinyurl.com/feb-22-practice-org][tinyurl.com/feb-22-practice-org]]
    
* Part 1: Setup (5 minutes)
  - In a code block,
    1) check your current directory
    2) navigate to your home directory =$HOME=
    3) Create a directory named ~exercise_playground~
    4) Navigate into ~exercise_playground~.
  
* Part 2: Directory and File Manipulation (15 minutes)

  - **Task 1**: Create two directories within ~exercise_playground~,
    named ~exercise_dir1~ and ~exercise_dir2~.
    
  - **Task 2**: Copy the ~/etc/passwd~ file to your current directory, and
    rename it to ~passwd_copy~.
    
  - **Task 3**: Move ~passwd_copy~ into ~exercise_dir1~, create a hard
    link in ~exercise_dir2~ named ~passwd_hardlink~, and a symbolic
    link in ~exercise_playground~ pointing to ~passwd_copy~ inside
    ~exercise_dir1~, named ~passwd_symlink~.
    
  - **Task 4**: Verify the location and existence of the files and
    links with a long file listing that includes /inode/ numbers.

* Part 3: Clean-up and Verification (10 minutes)
  - **Task 1**: Delete ~passwd_hardlink~ and move ~passwd_copy~ back to
    ~exercise_playground~. Remove both ~exercise_dir1~ and
    ~exercise_dir2~.

  - **Task 2**: Confirm your directory structure with ~ls -l~ and ensure
    all actions were completed as intended.

  - **Final Step**: Remove ~exercise_playground~ to clean up your
    workspace.

* Submission Instructions:
  - All commands entered in code blocks should be "verbose".
  - Create code blocks following each list of tasks and run them.
  - Ensure all your commands, their outputs, and any observations are
    clearly documented in your Org-mode file.
  - Save your Org-mode file and submit it to Canvas for
    grading. Include any reflections on the process, challenges
    encountered, and how you addressed them.

* Reflection:
  - Finally, reflect on the usage of Emacs Org-mode for documenting
    command-line operations in a =quote= block below this paragraph. How
    does this approach benefit learning and documentation practices?
    How does it challenge you?
